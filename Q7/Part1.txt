Your friend Binh is incredibly grateful, but he needs one more function to complete his analysis. For this task, you will need to copy across the def read_pgn(file_name: str) -> list[dict]: function from the previous task. As in the last task, you may only import modules that are part of the Python standard library, pandas, or NumPy, as well as Binh's chess functions.

Part 1
To prepare you for part 2, Binh would like you to help him understand the number of possible positions for a given board state. The function def count_positions(moves: list[str], depth: int) -> int: should take a list of moves, defining a board state, and should determine the number of legal moves at a distance depth from the given board state.

You should be using the function binh_chess.possible_moves to get the list of legal moves for any given position.

To get you started, Binh was able to determine the values, starting from the starting position, of depths 1 through 4. 

count_positions([], 1) == 20
count_positions([], 2) == 400
count_positions([], 3) == 8902
count_positions([], 4) == 197281
count_positions(['e4', 'e6', 'Nf3', 'd5', 'exd5', 'Qxd5', 'd4', 'Nc6', 'Nc3', 'Qd7', 'Be3', 'Nf6'], 3) == 55707

How the binh_chess.py works:
>>> from binh_chess import possible_moves, show_board
>>> print(show_board(['d4', 'Nc6', 'Bf4']))
r . b q k b n r
p p p p p p p p
. . n . . . . .
. . . . . . . .
. . . P . B . .
. . . . . . . .
P P P . P P P P
R N . Q K B N R
>>> print(possible_moves(['d4', 'Nc6', 'Bf4']))
['Nh6', 'Nf6', 'Rb8', 'Nb8', 'Ne5', 'Na5', 'Nxd4', 'Nb4', 'h6', 'g6', 'f6', 'e6', 'd6', 'b6', 'a6', 'h5', 'g5', 'f5', 'e5', 'd5', 'b5', 'a5']